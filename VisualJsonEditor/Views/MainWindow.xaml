<Window x:Class="VisualJsonEditor.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:viewModels="clr-namespace:VisualJsonEditor.ViewModels"
        xmlns:views="clr-namespace:VisualJsonEditor.Views"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:converters="clr-namespace:MyToolkit.Converters;assembly=MyToolkit.Extended"
        xmlns:domain="clr-namespace:VisualJsonEditor.Domain"
        xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:localization="clr-namespace:VisualJsonEditor.Localization"
        xmlns:controls="clr-namespace:VisualJsonEditor.Controls"
        mc:Ignorable="d" Title="{x:Static localization:Strings.HeaderMainWindow}" 
        Height="600" Width="700" MinWidth="400" MinHeight="400" 
        WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <viewModels:MainWindowModel x:Key="ViewModel" />
        <converters:VisibilityConverter x:Key="VisibilityConverter" />
        <converters:NotConverter x:Key="NotConverter" />
    </Window.Resources>

    <Grid DataContext="{StaticResource ViewModel}" Background="LightGray">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- ribbons -->
        <Ribbon ShowQuickAccessToolBarOnTop="True" Loaded="OnRibbonsLoaded">
            <!--<Ribbon.HelpPaneContent>
                <RibbonButton Content="?" />
            </Ribbon.HelpPaneContent>-->

            <Ribbon.QuickAccessToolBar>
                <RibbonQuickAccessToolBar>
                    <RibbonButton SmallImageSource="/Images/ButtonSaveSmall.png"
                                  LargeImageSource="/Images/ButtonSaveLarge.png"
                                  QuickAccessToolBarId="Save"
                                  Command="{Binding SaveDocumentCommand}" CommandParameter="{Binding SelectedDocument}"/>
                    <Separator />
                    <RibbonButton SmallImageSource="/Images/ButtonUndoSmall.png"
                                  LargeImageSource="/Images/ButtonUndoSmall.png"
                                  Command="{Binding UndoCommand}" CommandParameter="{Binding SelectedDocument}"/>
                    <RibbonButton SmallImageSource="/Images/ButtonRedoSmall.png"
                                  LargeImageSource="/Images/ButtonRedoSmall.png"
                                  Command="{Binding RedoCommand}" CommandParameter="{Binding SelectedDocument}"/>
                </RibbonQuickAccessToolBar>
            </Ribbon.QuickAccessToolBar>

            <Ribbon.ApplicationMenu>
                <RibbonApplicationMenu KeyTip="F">
                    <RibbonApplicationMenuItem Header="{Binding Strings.ButtonNew}" Command="{Binding CreateDocumentCommand}" 
                                               QuickAccessToolBarImageSource="/Images/ButtonCreateLarge.png"
                                               ToolTip="{Binding Strings.ShortcutCtrlN}"
                                               ImageSource="/Images/ButtonCreateLarge.png" />
                    <RibbonApplicationMenuItem Header="{Binding Strings.ButtonOpen}" Command="{Binding OpenDocumentCommand}" 
                                               QuickAccessToolBarImageSource="/Images/ButtonSaveLarge.png"
                                               ToolTip="{Binding Strings.ShortcutCtrlO}"
                                               ImageSource="/Images/ButtonOpenLarge.png" />
                    <RibbonApplicationMenuItem Header="{Binding Strings.ButtonSave}" CanAddToQuickAccessToolBarDirectly="True" 
                                               QuickAccessToolBarId="Save" 
                                               Command="{Binding SaveDocumentCommand}" CommandParameter="{Binding SelectedDocument}"
                                               QuickAccessToolBarImageSource="/Images/ButtonSaveSmall.png"
                                               ToolTip="{Binding Strings.ShortcutCtrlS}"
                                               ImageSource="/Images/ButtonSaveLarge.png" />
                    <RibbonApplicationMenuItem Header="{Binding Strings.ButtonSaveAs}" CanAddToQuickAccessToolBarDirectly="True" 
                                               Command="{Binding SaveDocumentAsCommand}" CommandParameter="{Binding SelectedDocument}"
                                               QuickAccessToolBarImageSource="/Images/ButtonSaveSmall.png"
                                               ImageSource="/Images/ButtonSaveLarge.png" />
                    <RibbonApplicationMenuItem Header="{Binding Strings.ButtonSaveSchemaAs}" CanAddToQuickAccessToolBarDirectly="True" 
                                               Command="{Binding SaveDocumentSchemaAsCommand}" CommandParameter="{Binding SelectedDocument}"
                                               QuickAccessToolBarImageSource="/Images/ButtonSaveSmall.png"
                                               ImageSource="/Images/ButtonSaveLarge.png" />

                    <Border Height="100" IsEnabled="False" />

                    <RibbonApplicationMenu.AuxiliaryPaneContent>
                        <Grid Margin="8,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <TextBlock Text="{Binding Strings.HeaderRecentDocuments}" FontWeight="Bold" Margin="0,8,0,8" />
                            <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Visible">
                                <ItemsControl ItemsSource="{Binding Configuration.RecentFiles}" Margin="0,0,8,0">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <RibbonApplicationMenuItem Header="{Binding}"
                                                                       Command="{Binding OpenDocumentFromPathCommand, Source={StaticResource ViewModel}}"
                                                                       CommandParameter="{Binding FilePath}"
                                                                       ImageSource="/Images/ButtonCreateLarge.png">
                                                <RibbonApplicationMenuItem.HeaderTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <TextBlock Text="{Binding FileName}" FontSize="16" />
                                                            <TextBlock Text="{Binding FilePath}" FontSize="10" />
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </RibbonApplicationMenuItem.HeaderTemplate>
                                            </RibbonApplicationMenuItem>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ScrollViewer>
                        </Grid>
                    </RibbonApplicationMenu.AuxiliaryPaneContent>
                    <RibbonApplicationMenu.FooterPaneContent>
                        <DockPanel LastChildFill="False">
                            <RibbonButton Label="{Binding Strings.ButtonExit}" Click="OnExitApplication"
                                          SmallImageSource="/Images/ButtonExitSmall.png" KeyTip="X"
                                          DockPanel.Dock="Right" Margin="2" BorderBrush="#B8114EAF" />
                        </DockPanel>
                    </RibbonApplicationMenu.FooterPaneContent>
                </RibbonApplicationMenu>

            </Ribbon.ApplicationMenu>

            <RibbonTab Header="Home" KeyTip="H" >
                <RibbonGroup Header="{Binding Strings.RibbonGroupFile}">
                    <RibbonButton SmallImageSource="/Images/ButtonCloseSmall.png"
                                  LargeImageSource="/Images/ButtonCloseLarge.png"
                                  Label="{Binding Strings.ButtonClose}" 
                                  ToolTip="{Binding Strings.ShortcutCtrlW}"
                                  Command="{Binding CloseDocumentCommand}" CommandParameter="{Binding SelectedDocument}" />
                    <RibbonButton SmallImageSource="/Images/ButtonValidateSmall.png"
                                  LargeImageSource="/Images/ButtonValidateLarge.png"
                                  Label="{Binding Strings.ButtonValidate}" 
                                  ToolTip="{Binding Strings.ShortcutCtrlU}"
                                  Command="{Binding ValidateDocumentCommand}" CommandParameter="{Binding SelectedDocument}" />
                </RibbonGroup>
                <RibbonGroup Header="{Binding Strings.RibbonGroupMore}">
                    <RibbonButton SmallImageSource="/Images/ButtonAboutSmall.png"
                                  LargeImageSource="/Images/ButtonAboutLarge.png"
                                  Label="{Binding Strings.ButtonAbout}" Click="OnShowAboutWindow" />
                </RibbonGroup>
            </RibbonTab>
        </Ribbon>

        <!-- documents -->
        <xcad:DockingManager DocumentsSource="{Binding Documents}" Grid.Row="1" Margin="0,8,0,0"
                             ActiveContent="{Binding SelectedDocument, Mode=TwoWay}"
                             x:Name="DockingManager" DocumentClosing="OnDocumentClosing">
            <!-- document template -->
            <xcad:DockingManager.LayoutItemTemplate>
                <DataTemplate>
                    <ScrollViewer Margin="-1" d:DataContext="{d:DesignInstance Type=domain:JsonDocument}" Focusable="False">
                        <Border IsEnabled="{Binding IsLoading, Source={StaticResource ViewModel}, Converter={StaticResource NotConverter}}">
                            <controls:JsonEditor Margin="8" Data="{Binding Data}" 
                                                 IsEnabled="{Binding IsReadOnly, Converter={StaticResource NotConverter}}" />
                        </Border>
                    </ScrollViewer>
                </DataTemplate>
            </xcad:DockingManager.LayoutItemTemplate>
            <!-- header on floating windows -->
            <xcad:DockingManager.DocumentTitleTemplate>
                <DataTemplate>
                    <Border d:DataContext="{d:DesignInstance Type=xcad:LayoutDocument}" Margin="6,0,0,0">
                        <StackPanel Orientation="Horizontal" DataContext="{Binding Content}" 
                                    d:DataContext="{d:DesignInstance Type=domain:JsonDocument}">
                            <TextBlock Text="{Binding DisplayTitle}" />
                            <TextBlock Text="{Binding Strings.LabelReadOnly, Source={StaticResource ViewModel}}" 
                                       Visibility="{Binding IsReadOnly, Converter={StaticResource VisibilityConverter}}" />
                            <TextBlock Text=" *" Width="8" 
                                       Visibility="{Binding UndoRedoManager.CanUndo, Converter={StaticResource VisibilityConverter}}" />
                        </StackPanel>
                    </Border>
                </DataTemplate>
            </xcad:DockingManager.DocumentTitleTemplate>
            <!-- header on tabs -->
            <xcad:DockingManager.DocumentHeaderTemplate>
                <DataTemplate>
                    <Border d:DataContext="{d:DesignInstance Type=xcad:LayoutDocument}" Margin="6,2,0,0">
                        <StackPanel Orientation="Horizontal" DataContext="{Binding Content}" 
                                    ToolTip="{Binding FilePath}" d:DataContext="{d:DesignInstance Type=domain:JsonDocument}">
                            <TextBlock Text="{Binding DisplayTitle}" />
                            <TextBlock Text="{Binding Strings.LabelReadOnly, Source={StaticResource ViewModel}}" 
                                       Visibility="{Binding IsReadOnly, Converter={StaticResource VisibilityConverter}}" />
                            <TextBlock Text=" *" Width="8" Visibility="{Binding UndoRedoManager.CanUndo, Converter={StaticResource VisibilityConverter}}" />
                        </StackPanel>
                    </Border>
                </DataTemplate>
            </xcad:DockingManager.DocumentHeaderTemplate>
            <!-- header in pane menu -->
            <xcad:DockingManager.DocumentPaneMenuItemHeaderTemplate>
                <DataTemplate>
                    <Border d:DataContext="{d:DesignInstance Type=xcad:LayoutDocument}">
                        <StackPanel Orientation="Horizontal" DataContext="{Binding Content}" 
                                    d:DataContext="{d:DesignInstance Type=domain:JsonDocument}">
                            <TextBlock Text="{Binding DisplayTitle}" />
                            <TextBlock Text=" *" Width="8" Visibility="{Binding UndoRedoManager.CanUndo, Converter={StaticResource VisibilityConverter}}" />
                            <TextBlock Width="8" Visibility="{Binding UndoRedoManager.CanUndo, Converter={StaticResource NotConverter}}" />
                        </StackPanel>
                    </Border>
                </DataTemplate>
            </xcad:DockingManager.DocumentPaneMenuItemHeaderTemplate>
        </xcad:DockingManager>

        <!-- status bar -->
        <StatusBar Height="24" Grid.Row="2" HorizontalContentAlignment="Stretch">
            <ProgressBar IsIndeterminate="{Binding IsLoading}" IsEnabled="{Binding IsLoading}"
                         VerticalAlignment="Stretch" Width="150" Height="14" Margin="2" />
            <Separator Visibility="{Binding SelectedDocument, Converter={StaticResource VisibilityConverter}}" />
            <StatusBarItem Content="{Binding SelectedDocument.FilePath}" />
            <Separator Visibility="{Binding SelectedDocument, Converter={StaticResource VisibilityConverter}}" />
            <StatusBarItem Content="{Binding SelectedDocument.SchemaPath}" />
        </StatusBar>
    </Grid>
</Window>
